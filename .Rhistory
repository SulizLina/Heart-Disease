uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]}
a=getmode(dataset$ca)
print(a)
dataset[dataset$ca=="4","ca"]<-a
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]}
b=getmode(dataset$thal)
print(b)
dataset[dataset$thal=="0","thal"]<-b
dataset$trestbps <- ifelse(dataset$trestbps <=90, "Low",
ifelse(dataset$trestbps <= 120, "Normal",
ifelse(dataset$trestbps <= 129, "Elevated",
ifelse(dataset$trestbps <= 139, "High Stage 1",
ifelse(dataset$trestbps <= 180, "High Stage 2",
ifelse(dataset$trestbps > 180, "High Stage 3",0))))))
trestbpsdis <- dataset$trestbps
print(trestbpsdis)
dataset$age <- ifelse(dataset$age <= 16, "Children",
ifelse(dataset$age <= 39, "Young Adults",
ifelse(dataset$age <= 59, "Middle-aged Adults",
ifelse(dataset$age < 99, "Old Adults",0))))
agedis <- dataset$age
print(agedis)
min_max_normalize <- function(x) {
(x - min(x)) / (max(x) - min(x))}
dataset$chol <- min_max_normalize(dataset$chol)
print(dataset$chol)
dataset$oldpeak <- min_max_normalize(dataset$oldpeak)
print(dataset$oldpeak)
dataset$thalach <- min_max_normalize(dataset$thalach)
print(dataset$thalach)
sexencoding <- dataset$sex
print(sexencoding)
dataset$trestbps=factor(dataset$trestbps,levels=c("Low","Normal","Elevated","High Stage 1","High Stage 2","High Stage 3"),labels=c(0,1,2,3,4,5))
dataset$age=factor(dataset$age,levels=c("Children","Young Adults","Middle-aged Adults","Old Adults"),labels=c(0,1,2,3))
csex=chisq.test(dataset$sex , dataset$target)
print(csex)
ccp=chisq.test(dataset$cp , dataset$target)
print(ccp)
cfbs=chisq.test(dataset$fbs , dataset$target)
print(cfbs)
crestecg=chisq.test(dataset$restecg , dataset$target)
print(crestecg)
cexang=chisq.test(dataset$exang , dataset$target)
print(cexang)
cslope=chisq.test(dataset$slope , dataset$target)
print(cslope)
cca=chisq.test(dataset$ca , dataset$target)
print(cca)
cthal=chisq.test(dataset$thal , dataset$target)
print(cthal)
cage= chisq.test(dataset$age, dataset$target)
print(cage)
ctrestbps=chisq.test(dataset$trestbps ,dataset$target)
print(ctrestbps)
cchol=cor(dataset$chol ,dataset$target)
print(cchol)
cthalach=cor(dataset$thalach ,dataset$target)
print(cthalach)
coldpeak=cor(dataset$oldpeak ,dataset$target)
print(coldpeak)
dataset <- dataset[, -which(names(dataset) == "fbs")]
head(dataset)
ncol(dataset)
nrow(dataset)
library(party)
library(party)
library(party)
library(party)
library(party)
library(party)
dim(trainData)
install.packages("ggplot2")
library(mlbench)
library(aod)
library(mlbench)
library(dplyr)
library(ggplot2)
library(pROC)
library(stats)
library(rpart.plot)
library(randomForest)
library(gbm)
library(class)
library(patchwork)
library(e1071)
library(caret)
data= read.csv('DataSet/heart.csv')
head(data)
sum(duplicated(data))
data[c(61,65,119,669),]
dataset <- data[!duplicated(data), ]
dataset
sum(duplicated(dataset))
ncol(dataset)
nrow(dataset)
summary(dataset$age)
var(dataset$age)
summary(dataset$trestbps)
var(dataset$trestbps)
summary (dataset$chol)
var(dataset$chol)
summary(dataset$thalach)
var(dataset$thalach)
summary(dataset$oldpeak)
var(dataset$oldpeak)
boxplot(dataset$age)
boxplot(dataset$trestbps)
boxplot(dataset$chol)
boxplot(dataset$thalach)
boxplot(dataset$oldpeak)
tab <- dataset$target %>% table()
percentages <- tab %>% prop.table() %>% round(3) * 100
txt <- paste0(names(tab), '\n', percentages, '%')
pie(tab, labels = txt, main="percentage of the target")
ggplot(dataset, aes(x = sex, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "Sex", y = "Count",fill="target")
ggplot(dataset, aes(x = cp, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "cp", y = "Count",fill="target")
ggplot(dataset, aes(x = ca, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "ca", y = "Count",fill="target")
plot(dataset$target,dataset$thalach)
plot(dataset$age, dataset$trestbps, pch = 16, col = "black", xlab = "Age", ylab = "trestbps", main = "Scatter Plot for Age and trestbps")
abline(lm(dataset$trestbps ~ dataset$age), col = "red", lwd = 2)
plot(dataset$thalach, dataset$oldpeak, pch = 16, col = "black", xlab = "thalach", ylab = "oldpeak", main = "Scatter Plot for thalach and oldpeak")
abline(lm(dataset$oldpeak ~ dataset$thalach), col = "red", lwd = 2)
plot(dataset$chol,dataset$target)
ggplot(dataset, aes(x = fbs, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "fbs", y = "Count",fill="target")
sum(is.na(data))
boxplot.stats(dataset$age)$out
boxplot.stats(dataset$trestbps)$out
boxplot.stats(dataset$chol)$out
boxplot.stats(dataset$thalach)$out
boxplot.stats(dataset$oldpeak)$out
dataset[129,5]=246.5
dataset[dataset$ca != "3" & dataset$ca != "1" & dataset$ca != "2" & dataset$ca != "0",]
dataset[dataset$sex != "0" & dataset$sex!= "1",]
dataset[dataset$fbs != "0" & dataset$fbs != "1",]
dataset[dataset$restecg != "0" & dataset$restecg != "1" & dataset$restecg != "2" ,]
dataset[dataset$exang != "0" & dataset$exang != "1",]
dataset[dataset$slope != "0" & dataset$slope != "1" & dataset$slope != "2" ,]
dataset[dataset$thal != "1" & dataset$thal != "2" & dataset$thal != "3" ,]
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]}
a=getmode(dataset$ca)
print(a)
dataset[dataset$ca=="4","ca"]<-a
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]}
b=getmode(dataset$thal)
print(b)
dataset[dataset$thal=="0","thal"]<-b
dataset$trestbps <- ifelse(dataset$trestbps <=90, "Low",
ifelse(dataset$trestbps <= 120, "Normal",
ifelse(dataset$trestbps <= 129, "Elevated",
ifelse(dataset$trestbps <= 139, "High Stage 1",
ifelse(dataset$trestbps <= 180, "High Stage 2",
ifelse(dataset$trestbps > 180, "High Stage 3",0))))))
trestbpsdis <- dataset$trestbps
print(trestbpsdis)
dataset$age <- ifelse(dataset$age <= 16, "Children",
ifelse(dataset$age <= 39, "Young Adults",
ifelse(dataset$age <= 59, "Middle-aged Adults",
ifelse(dataset$age < 99, "Old Adults",0))))
agedis <- dataset$age
print(agedis)
min_max_normalize <- function(x) {
(x - min(x)) / (max(x) - min(x))}
dataset$chol <- min_max_normalize(dataset$chol)
print(dataset$chol)
dataset$oldpeak <- min_max_normalize(dataset$oldpeak)
print(dataset$oldpeak)
dataset$thalach <- min_max_normalize(dataset$thalach)
print(dataset$thalach)
sexencoding <- dataset$sex
print(sexencoding)
dataset$trestbps=factor(dataset$trestbps,levels=c("Low","Normal","Elevated","High Stage 1","High Stage 2","High Stage 3"),labels=c(0,1,2,3,4,5))
dataset$age=factor(dataset$age,levels=c("Children","Young Adults","Middle-aged Adults","Old Adults"),labels=c(0,1,2,3))
csex=chisq.test(dataset$sex , dataset$target)
print(csex)
ccp=chisq.test(dataset$cp , dataset$target)
print(ccp)
cfbs=chisq.test(dataset$fbs , dataset$target)
print(cfbs)
crestecg=chisq.test(dataset$restecg , dataset$target)
print(crestecg)
cexang=chisq.test(dataset$exang , dataset$target)
print(cexang)
cslope=chisq.test(dataset$slope , dataset$target)
print(cslope)
cca=chisq.test(dataset$ca , dataset$target)
print(cca)
cthal=chisq.test(dataset$thal , dataset$target)
print(cthal)
cage= chisq.test(dataset$age, dataset$target)
print(cage)
ctrestbps=chisq.test(dataset$trestbps ,dataset$target)
print(ctrestbps)
cchol=cor(dataset$chol ,dataset$target)
print(cchol)
cthalach=cor(dataset$thalach ,dataset$target)
print(cthalach)
coldpeak=cor(dataset$oldpeak ,dataset$target)
print(coldpeak)
dataset <- dataset[, -which(names(dataset) == "fbs")]
head(dataset)
ncol(dataset)
nrow(dataset)
library(party)
install.packages("ggplot2")
library(mlbench)
library(aod)
library(mlbench)
library(dplyr)
library(ggplot2)
library(pROC)
library(stats)
library(rpart.plot)
library(randomForest)
library(gbm)
library(class)
library(patchwork)
library(e1071)
library(caret)
data= read.csv('DataSet/heart.csv')
head(data)
sum(duplicated(data))
data[c(61,65,119,669),]
dataset <- data[!duplicated(data), ]
dataset
sum(duplicated(dataset))
ncol(dataset)
nrow(dataset)
summary(dataset$age)
var(dataset$age)
summary(dataset$trestbps)
var(dataset$trestbps)
summary (dataset$chol)
var(dataset$chol)
summary(dataset$thalach)
var(dataset$thalach)
summary(dataset$oldpeak)
var(dataset$oldpeak)
boxplot(dataset$age)
boxplot(dataset$trestbps)
boxplot(dataset$chol)
boxplot(dataset$thalach)
boxplot(dataset$oldpeak)
tab <- dataset$target %>% table()
percentages <- tab %>% prop.table() %>% round(3) * 100
txt <- paste0(names(tab), '\n', percentages, '%')
pie(tab, labels = txt, main="percentage of the target")
ggplot(dataset, aes(x = sex, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "Sex", y = "Count",fill="target")
install.packages("ggplot2")
confidence_interval <- quantile(bootstrap_statistics, c(0.025, 0.75))
boot(data, 0.75, 10)
library(party)
library(boot)
boot(data, 0.75, 10)
# Sample data
data <- c(4, 6, 7, 2, 3, 8, 5, 9, 1, 7)
# Number of bootstrap iterations
n_iterations <- 1000
# Create an empty vector to store bootstrap samples
bootstrap_samples <- vector("list", n_iterations)
# Perform bootstrap resampling
for (i in 1:n_iterations) {
bootstrap_samples[[i]] <- sample(data, replace = TRUE)
}
# Calculate a statistic of interest on each bootstrap sample
bootstrap_statistics <- sapply(bootstrap_samples, function(x) quantile(x, 0.75))
# Calculate the confidence interval using quantiles
confidence_interval <- quantile(bootstrap_statistics, c(0.025, 0.975))
# Open a new window to display the results
new_window <- function() {
if (.Platform$OS.type == "windows") {
shell.exec(paste0("data:text/html,", htmltools::html_print(results)))
} else {
browseURL(paste0("data:text/html;charset=utf-8,", htmltools::html_print(results)))
}
}
# Create the HTML representation of the results
results <- paste(
"<h2>Bootstrap Confidence Interval (95%):</h2>",
"<p>", paste(confidence_interval, collapse = " - "), "</p>",
sep = ""
)
set.seed(1234)
ind=sample (2, nrow(dataset), replace=TRUE, prob=c(0.75 , 0.25))
trainData=dataset[ind==1,]
testData=dataset[ind==2,]
library(party)
library(boot)
library(caTools)
install.packages("RWeka")
library(RWeka)
set.seed(1234)
ind=sample (2, nrow(dataset), replace=TRUE, prob=c(0.75 , 0.25))
trainData=dataset[ind==1,]
testData=dataset[ind==2,]
gain <- infoGain(target ~ ., data)
set.seed(1234)
ind=sample (2, nrow(dataset), replace=TRUE, prob=c(0.75 , 0.25))
trainData=dataset[ind==1,]
testData=dataset[ind==2,]
gain <- infoGain(target ~ ., dataset)
library(party)
library(boot)
library(caTools)
install.packages("RWeka")
library(RWeka)
install.packages("RWeka")
gain <- infoGain(target ~ ., dataset)
gain <- infoGain(target ~ ., dataset)
gain <- infoGain(target ~ thalach, dataset)
gain <- infoGain(target ~ thalach, dataset)
gain <- infoGain(target ~ thalach, dataset)
gain <- infoGain(target ~ thalach, dataset)
library(party)
library(boot)
library(caTools)
install.packages("RWeka")
library(RWeka)
install.packages("FSelector")
library(FSelector)
gain <- infoGain(target ~ thalach, dataset)
install.packages("ggplot2")
library(mlbench)
library(aod)
library(mlbench)
library(dplyr)
library(ggplot2)
library(pROC)
library(stats)
library(rpart.plot)
library(randomForest)
library(gbm)
library(class)
library(patchwork)
library(e1071)
library(caret)
data= read.csv('DataSet/heart.csv')
head(data)
sum(duplicated(data))
data[c(61,65,119,669),]
dataset <- data[!duplicated(data), ]
dataset
sum(duplicated(dataset))
ncol(dataset)
nrow(dataset)
summary(dataset$age)
var(dataset$age)
summary(dataset$trestbps)
var(dataset$trestbps)
summary (dataset$chol)
var(dataset$chol)
summary(dataset$thalach)
var(dataset$thalach)
summary(dataset$oldpeak)
var(dataset$oldpeak)
boxplot(dataset$age)
boxplot(dataset$trestbps)
boxplot(dataset$chol)
boxplot(dataset$thalach)
boxplot(dataset$oldpeak)
tab <- dataset$target %>% table()
percentages <- tab %>% prop.table() %>% round(3) * 100
txt <- paste0(names(tab), '\n', percentages, '%')
pie(tab, labels = txt, main="percentage of the target")
ggplot(dataset, aes(x = sex, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "Sex", y = "Count",fill="target")
ggplot(dataset, aes(x = cp, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "cp", y = "Count",fill="target")
ggplot(dataset, aes(x = ca, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "ca", y = "Count",fill="target")
plot(dataset$target,dataset$thalach)
plot(dataset$age, dataset$trestbps, pch = 16, col = "black", xlab = "Age", ylab = "trestbps", main = "Scatter Plot for Age and trestbps")
abline(lm(dataset$trestbps ~ dataset$age), col = "red", lwd = 2)
plot(dataset$thalach, dataset$oldpeak, pch = 16, col = "black", xlab = "thalach", ylab = "oldpeak", main = "Scatter Plot for thalach and oldpeak")
abline(lm(dataset$oldpeak ~ dataset$thalach), col = "red", lwd = 2)
plot(dataset$chol,dataset$target)
ggplot(dataset, aes(x = fbs, fill = as.factor(target))) +
geom_bar(stat = "count", position = "stack", width = 0.6, show.legend = TRUE) +
geom_text(aes(label = after_stat(count)), stat = 'count', position = position_stack(vjust = 0.5)) +
labs(x = "fbs", y = "Count",fill="target")
sum(is.na(data))
boxplot.stats(dataset$age)$out
boxplot.stats(dataset$trestbps)$out
boxplot.stats(dataset$chol)$out
boxplot.stats(dataset$thalach)$out
boxplot.stats(dataset$oldpeak)$out
dataset[129,5]=246.5
dataset[dataset$ca != "3" & dataset$ca != "1" & dataset$ca != "2" & dataset$ca != "0",]
dataset[dataset$sex != "0" & dataset$sex!= "1",]
dataset[dataset$fbs != "0" & dataset$fbs != "1",]
dataset[dataset$restecg != "0" & dataset$restecg != "1" & dataset$restecg != "2" ,]
dataset[dataset$exang != "0" & dataset$exang != "1",]
dataset[dataset$slope != "0" & dataset$slope != "1" & dataset$slope != "2" ,]
dataset[dataset$thal != "1" & dataset$thal != "2" & dataset$thal != "3" ,]
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]}
a=getmode(dataset$ca)
print(a)
dataset[dataset$ca=="4","ca"]<-a
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]}
b=getmode(dataset$thal)
print(b)
dataset[dataset$thal=="0","thal"]<-b
dataset$trestbps <- ifelse(dataset$trestbps <=90, "Low",
ifelse(dataset$trestbps <= 120, "Normal",
ifelse(dataset$trestbps <= 129, "Elevated",
ifelse(dataset$trestbps <= 139, "High Stage 1",
ifelse(dataset$trestbps <= 180, "High Stage 2",
ifelse(dataset$trestbps > 180, "High Stage 3",0))))))
trestbpsdis <- dataset$trestbps
print(trestbpsdis)
dataset$age <- ifelse(dataset$age <= 16, "Children",
ifelse(dataset$age <= 39, "Young Adults",
ifelse(dataset$age <= 59, "Middle-aged Adults",
ifelse(dataset$age < 99, "Old Adults",0))))
agedis <- dataset$age
print(agedis)
min_max_normalize <- function(x) {
(x - min(x)) / (max(x) - min(x))}
dataset$chol <- min_max_normalize(dataset$chol)
print(dataset$chol)
dataset$oldpeak <- min_max_normalize(dataset$oldpeak)
print(dataset$oldpeak)
dataset$thalach <- min_max_normalize(dataset$thalach)
print(dataset$thalach)
sexencoding <- dataset$sex
print(sexencoding)
dataset$trestbps=factor(dataset$trestbps,levels=c("Low","Normal","Elevated","High Stage 1","High Stage 2","High Stage 3"),labels=c(0,1,2,3,4,5))
dataset$age=factor(dataset$age,levels=c("Children","Young Adults","Middle-aged Adults","Old Adults"),labels=c(0,1,2,3))
csex=chisq.test(dataset$sex , dataset$target)
print(csex)
ccp=chisq.test(dataset$cp , dataset$target)
print(ccp)
cfbs=chisq.test(dataset$fbs , dataset$target)
print(cfbs)
crestecg=chisq.test(dataset$restecg , dataset$target)
print(crestecg)
cexang=chisq.test(dataset$exang , dataset$target)
print(cexang)
cslope=chisq.test(dataset$slope , dataset$target)
print(cslope)
cca=chisq.test(dataset$ca , dataset$target)
print(cca)
cthal=chisq.test(dataset$thal , dataset$target)
print(cthal)
cage= chisq.test(dataset$age, dataset$target)
print(cage)
ctrestbps=chisq.test(dataset$trestbps ,dataset$target)
print(ctrestbps)
cchol=cor(dataset$chol ,dataset$target)
print(cchol)
cthalach=cor(dataset$thalach ,dataset$target)
print(cthalach)
coldpeak=cor(dataset$oldpeak ,dataset$target)
print(coldpeak)
dataset <- dataset[, -which(names(dataset) == "fbs")]
head(dataset)
ncol(dataset)
nrow(dataset)
library(party)
library(boot)
library(caTools)
install.packages("RWeka")
library(RWeka)
install.packages("FSelector")
library(FSelector)
set.seed(1234)
ind=sample (2, nrow(dataset), replace=TRUE, prob=c(0.70 , 0.30))
train_data=dataset[ind==1,]
test_data=dataset[ind==2,]
set.seed(1234)
ind=sample (2, nrow(dataset), replace=TRUE, prob=c(0.75 , 0.25))
train_data=dataset[ind==1,]
test_data=dataset[ind==2,]
set.seed(1234)
ind=sample (2, nrow(dataset), replace=TRUE, prob=c(0.80 , 0.20))
train_data=dataset[ind==1,]
test_data=dataset[ind==2,]
dim(trainData)
dim(testData)
head(testData)
install.packages("FSelector")
